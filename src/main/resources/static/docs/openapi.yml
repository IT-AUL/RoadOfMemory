openapi: 3.0.3
info:
  title: RoadOfMemory API
  description: API для RoadOfMemory, включая авторизацию пользователей и управление квестами.
  version: 1.0.0
tags:
  - name: "Auth"
    description: "Авторизация пользователя"
    externalDocs:
      description: "Find out more"
      url: "http://swagger.io"
  - name: "Quests"
    description: "Управление квестами"
  - name: "Locations"
    description: "Управление местоположениями"

paths:
  /auth:
    post:
      tags:
        - "Auth"
      summary: Авторизация пользователя
      description: Проверяет данные пользователя и выдает JWT токены при успешной авторизации.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthDto'
      responses:
        '200':
          description: Токены успешно сгенерированы
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          description: Некорректные данные пользователя
          content:
            application/json:
              schema:
                type: string
        '404':
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: string

  /refresh:
    post:
      tags:
        - "Auth"
      summary: Обновление токена
      description: Обновляет access токен на основе refresh токена.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenDto'
      responses:
        '200':
          description: Токен успешно обновлен
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: eyweUEghohcemohemo
        '400':
          description: Некорректный refresh токен
          content:
            application/json:
              schema:
                type: string

  /quests:
    post:
      tags:
        - "Quests"
      summary: Создание нового квеста
      description: Создает квест, основываясь на заголовке, языке и типе. Авторизованный пользователь автоматически становится автором.
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: JWT access-токен
        - in: query
          name: title
          required: true
          schema:
            type: string
        - in: query
          name: language
          required: true
          schema:
            $ref: '#/components/schemas/Language'
        - in: query
          name: type
          required: true
          schema:
            $ref: '#/components/schemas/Type'
      responses:
        '200':
          description: Успешное создание квеста
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestResponseDto'
    get:
      tags:
        - "Quests"
      summary: Получение списка опубликованных квестов
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Список квестов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestResponseDto'

  /quests/{id}:
    get:
      tags:
        - "Quests"
      summary: Получение квеста по ID
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: draft
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Квест найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestResponseDto'

    put:
      tags:
        - "Quests"
      summary: Обновление квеста
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/QuestRequestDto'
                promo:
                  type: string
                  format: binary
                audio:
                  type: string
                  format: binary
      responses:
        '200':
          description: Обновление получено

    delete:
      tags:
        - "Quests"
      summary: Удаление квеста
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Успешное удаление
          content:
            application/json:
              schema:
                type: boolean

  /quests/{id}/publish:
    post:
      tags:
        - "Quests"
      summary: Публикация квеста
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Квест успешно опубликован
          content:
            application/json:
              schema:
                type: boolean

  /quests/user:
    get:
      tags:
        - "Quests"
      summary: Получение квестов текущего пользователя
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Список квестов пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestResponseDto'

  /locations:
    post:
      tags:
        - "Locations"
      summary: Создание нового местоположения
      description: Создает новое местоположение с заголовком, описанием и языком. Авторизованный пользователь становится создателем.
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: JWT access-токен
        - in: query
          name: title
          required: true
          schema:
            type: string
        - in: query
          name: language
          required: true
          schema:
            $ref: '#/components/schemas/Language'
      responses:
        '200':
          description: Местоположение успешно создано
          content:
            application/json:
              schema:
                type: string
                example: "Created location"

  /locations/{id}/publish:
    post:
      tags:
        - "Locations"
      summary: Публикация местоположения
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Местоположение успешно опубликовано
          content:
            application/json:
              schema:
                type: boolean

  /locations/{id}:
    put:
      tags:
        - "Locations"
      summary: Обновление местоположения
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/LocationRequestDto'
                promo:
                  type: string
                  format: binary
                audio:
                  type: string
                  format: binary
                media:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Обновление местоположения начато

    delete:
      tags:
        - "Locations"
      summary: Удаление местоположения
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Местоположение успешно удалено
          content:
            application/json:
              schema:
                type: boolean

    get:
      tags:
        - "Locations"
      summary: Получение местоположения по ID
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: draft
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Местоположение найдено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationResponseDto'

  /locations/user:
    get:
      tags:
        - "Locations"
      summary: Получение местоположений текущего пользователя
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Список местоположений пользователя
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationResponseDto'

  /actions/{locationId}:
    post:
      tags:
        - "Locations"
      summary: "Создать действие для локации"
      description: "Добавляет новое действие (action) к локации."
      parameters:
        - in: path
          name: locationId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionRequestDto'
      responses:
        '200':
          description: "Действие успешно создано"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponseDto'

  /actions/{actionId}:
    put:
      tags:
        - "Locations"
      summary: "Обновить действие"
      description: "Обновляет существующее действие по его ID."
      parameters:
        - in: path
          name: actionId
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionRequestDto'
      responses:
        '200':
          description: "Действие успешно обновлено"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponseDto'
    delete:
      tags:
        - "Locations"
      summary: "Удалить действие"
      description: "Удаляет действие по его ID."
      parameters:
        - in: path
          name: actionId
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: "Действие успешно удалено"
  /progress/quests/{questId}/locations/{locationId}:
    post:
      tags:
        - "Quests"
      summary: "Отметить посещение локации в квесте"
      description: "Отмечает, что пользователь посетил определённую локацию в рамках квеста. Возвращает статус и флаг завершения квеста."
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: JWT access-токен
        - in: path
          name: questId
          required: true
          schema:
            type: string
            format: uuid
          description: "ID квеста"
        - in: path
          name: locationId
          required: true
          schema:
            type: string
            format: uuid
          description: "ID локации"
      responses:
        '200':
          description: "Статус посещения локации"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  quest_completed:
                    type: string
                    example: "true"
        '400':
          description: "Ошибка запроса"
          content:
            application/json:
              schema:
                type: string
        '404':
          description: "Квест или локация не найдены"
          content:
            application/json:
              schema:
                type: string

  /progress/quests:
    get:
      tags:
        - "Quests"
      summary: "Получить прогресс пользователя по всем квестам"
      description: "Возвращает список квестов, которые пользователь начал, с информацией о прогрессе по каждому."
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: JWT access-токен
      responses:
        '200':
          description: "Список прогресса по квестам"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QuestProgressDto'

  /progress/quests/{questId}:
    get:
      tags:
        - "Quests"
      summary: "Получить прогресс пользователя по конкретному квесту"
      description: "Возвращает прогресс пользователя по выбранному квесту."
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: JWT access-токен
        - in: path
          name: questId
          required: true
          schema:
            type: string
            format: uuid
          description: "ID квеста"
      responses:
        '200':
          description: "Прогресс по квесту"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestProgressDto'

    delete:
      tags:
        - "Quests"
      summary: "Сбросить прогресс пользователя по квесту"
      description: "Сбрасывает прогресс пользователя по выбранному квесту."
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
          description: JWT access-токен
        - in: path
          name: questId
          required: true
          schema:
            type: string
            format: uuid
          description: "ID квеста"
      responses:
        '200':
          description: "Статус сброса прогресса"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"

components:
  schemas:
    UserAuthDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Уникальный идентификатор пользователя"
          example: 123456
        first_name:
          type: string
          description: "Имя пользователя"
          example: "John"
        last_name:
          type: string
          description: "Фамилия пользователя"
          example: "Doe"
        username:
          type: string
          description: "Юзернейм пользователя"
          example: "johndoe"
        photo_url:
          type: string
          description: "URL фотографии пользователя"
          example: "https://example.com/photo.jpg"
        auth_date:
          type: integer
          format: int32
          description: "Время авторизации"
          example: 1617185730
        hash:
          type: string
          description: "Контрольная сумма данных пользователя"
          example: "5f4dcc3b5aa765d61d8327deb882cf99"
      required:
        - id
        - first_name
        - auth_date
        - hash

    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string

    RefreshTokenDto:
      type: object
      properties:
        refresh_token:
          type: string

    QuestRequestDto:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        locations:
          type: array
          items:
            type: string
            format: uuid
        language:
          $ref: '#/components/schemas/Language'
        type:
          $ref: '#/components/schemas/Type'

    QuestResponseDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "d8a96f6a-c7fa-4d99-9de3-8d40f72929b5"
        title:
          type: string
          example: "Escape the Room"
        promo_url:
          type: string
          example: "https://example.com/promo"
        audio_url:
          type: string
          example: "https://example.com/audio"
        description:
          type: string
          example: "Solve puzzles and escape the room."
        locations:
          type: array
          items:
            type: string
            format: uuid
            example: "b5c56d8b-7649-4f13-b937-539dd75da347"
        language:
          $ref: '#/components/schemas/Language'
        type:
          $ref: '#/components/schemas/Type'

        # Draft Fields
        title_draft:
          type: string
          example: "Escape the Room (draft)"
        promo_url_draft:
          type: string
          example: "https://example.com/promo-draft"
        audio_url_draft:
          type: string
          example: "https://example.com/audio-draft"
        description_draft:
          type: string
          example: "Solve puzzles and escape the room. (draft)"
        locations_draft:
          type: array
          items:
            type: string
            format: uuid
            example: "c8d8f92b-12a4-4c3d-a24d-b4e36b9c1536"
        language_draft:
          $ref: '#/components/schemas/Language'
        type_draft:
          $ref: '#/components/schemas/Type'

        rating:
          type: number
          format: float
          example: 4.5
        rating_count:
          type: integer
          example: 120
        author:
          type: string
          example: "John Doe"

    LocationRequestDto:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        language:
          $ref: '#/components/schemas/Language'
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        audio_timestamps:
          type: array
          items:
            type: number
            format: double
        actions:
          type: array
          description: "Список интерактивных действий (например, вопросы или задания) для этой локации"
          items:
            $ref: '#/components/schemas/ActionDto'


    LocationResponseDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "d8a96f6a-c7fa-4d99-9de3-8d40f72929b5"
        title:
          type: string
          example: "Central Park"
        latitude:
          type: number
          format: double
          example: 40.785091
        longitude:
          type: number
          format: double
          example: -73.968285
        promo_url:
          type: string
          example: "https://example.com/promo"
        audio_url:
          type: string
          example: "https://example.com/audio"
        media_urls:
          type: array
          items:
            type: string
            example: "https://example.com/image.jpg"
        description:
          type: string
          example: "A large park in the middle of New York City."
        language:
          $ref: '#/components/schemas/Language'
        audio_timestamps:
          type: array
          items:
            type: number
            format: double
        actions:
          type: array
          description: "Список интерактивных действий (например, вопросы или задания) для этой локации"
          items:
            $ref: '#/components/schemas/ActionDto'
        # Draft Fields
        title_draft:
          type: string
          example: "Central Park (draft)"
        latitude_draft:
          type: number
          format: double
          example: 40.784091
        longitude_draft:
          type: number
          format: double
          example: -73.965285
        promo_url_draft:
          type: string
          example: "https://example.com/promo-draft"
        audio_url_draft:
          type: string
          example: "https://example.com/audio-draft"
        media_urls_draft:
          type: array
          items:
            type: string
            example: "https://example.com/draft-image.jpg"
        description_draft:
          type: string
          example: "A draft description for Central Park."
        language_draft:
          $ref: '#/components/schemas/Language'
        audio_timestamps_draft:
          type: array
          items:
            type: number
            format: double
        actions_draft:
          type: array
          description: "Список интерактивных действий (например, вопросы или задания) для черновика локации"
          items:
            $ref: '#/components/schemas/ActionDto'

    ActionDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "Уникальный идентификатор действия"
          example: "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
        title:
          type: string
          description: "Название действия"
          example: "Вопрос о парке"
        description:
          type: string
          description: "Описание действия или вопроса"
          example: "Как называется этот парк?"
        answers:
          type: array
          description: "Варианты ответов"
          items:
            type: string
          example: ["Центральный парк", "Парк Горького", "Парк Победы"]
        correct_answer_index:
          type: integer
          description: "Индекс правильного ответа в массиве answers (начиная с 0)"
          example: 0

    ActionRequestDto:
      type: object
      properties:
        title:
          type: string
          description: "Название действия"
          example: "Вопрос о парке"
        description:
          type: string
          description: "Описание действия или вопроса"
          example: "Как называется этот парк?"
        answers:
          type: array
          description: "Варианты ответов"
          items:
            type: string
          example: ["Центральный парк", "Парк Горького", "Парк Победы"]
        correct_answer_index:
          type: integer
          description: "Индекс правильного ответа в массиве answers (начиная с 0)"
          example: 0
    ActionResponseDto:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: "Уникальный идентификатор действия"
          example: "a1b2c3d4-e5f6-7890-abcd-ef1234567890"
        title:
          type: string
          description: "Название действия"
          example: "Вопрос о парке"
        description:
          type: string
          description: "Описание действия или вопроса"
          example: "Как называется этот парк?"
        answers:
          type: array
          description: "Варианты ответов"
          items:
            type: string
          example: ["Центральный парк", "Парк Горького", "Парк Победы"]
        correct_answer_index:
          type: integer
          description: "Индекс правильного ответа в массиве answers (начиная с 0)"
          example: 0
    Language:
      type: string
      enum:
        - "RUS"
        - "TAT"
        - "ENG"

    Type:
      type: string
      enum:
        - "WALKING"
        - "EQUESTRIAN"
        - "BUS"
    QuestProgressDto:
      type: object
      properties:
        quest_id:
          type: string
          format: uuid
          description: "ID квеста"
          example: "d8a96f6a-c7fa-4d99-9de3-8d40f72929b5"
        quest_title:
          type: string
          description: "Название квеста"
          example: "Escape the Room"
        completed:
          type: boolean
          description: "Завершён ли квест"
          example: false
        visited_locations:
          type: array
          description: "ID посещённых локаций"
          items:
            type: string
            format: uuid
          example: ["b5c56d8b-7649-4f13-b937-539dd75da347"]
        total_locations:
          type: integer
          description: "Общее количество локаций в квесте"
          example: 5
